plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

/*ext['log4j2.version'] = '2.17.1'*/

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'org.projectlombok:lombok:1.18.20'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.6.2'

    ////////////////////////////WEBSOCKET//////////////////////////////////
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.webjars:webjars-locator-core'
    implementation group: 'org.webjars', name: 'sockjs-client', version: '1.5.1'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation group: 'org.webjars', name: 'stomp-websocket', version: '2.3.4'
    implementation 'org.webjars:bootstrap:3.3.7'
    ///////////////////////////////////////////////////////////////////////
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '4.0.3'

    // aws secrets
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws-secrets-manager-config:2.2.6.RELEASE'
    implementation 'commons-io:commons-io:2.5'

    //jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    //react view
    // https://mvnrepository.com/artifact/com.github.eirslett/frontend-maven-plugin
    implementation group: 'com.github.eirslett', name: 'frontend-maven-plugin', version: '1.12.0'

}

test {
    useJUnitPlatform()
}
def frontendDir = "$projectDir/frontend"
sourceSets {
    main {
    resources {
        srcDirs = ["$projectDir/src/main/resources"]
    }
    }
}
processResources {
    dependsOn "copyReactBuildFiles"
}
task installReact(type: Exec) {
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "audit", "fix" commandLine 'npm.cmd', 'install'
    }
    else {
        commandLine "npm", "audit", "fix"
        commandLine 'npm', 'install'
    }
}
task buildReact(type: Exec) {
    dependsOn "installReact"
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "run-script", "build"
    } else {
        commandLine "npm", "run-script", "build"
    }
}
task copyReactBuildFiles(type: Copy) {
    dependsOn "buildReact"
    from "$frontendDir/build"
    into "$projectDir/src/main/resources/static"
}

